# write transformed data
write.csv(x = snail_feed, file='outputs/snail_feed_clean.csv')
# read data
read.csv('data/Herbivore_specialisation.csv')
# read data
df <- read.csv('data/Herbivore_specialisation.csv')
str(df)
# read data
df <- read.csv('data/Herbivore_specialisation.csv',
strip.white = T,
na.strings = "",
stringsAsFactors=FALSE)
str(df)
summary(df)
df$Habitat
unique(df$Habitat)
unique(df$DayNight)
summary(df)
library(tidyverse)
# add a new variable name
# without any package
df$Mass <- log(df$Mass)
df
head(df)
# read data
df <- read.csv('data/Herbivore_specialisation.csv',
strip.white = T,
na.strings = "",
stringsAsFactors=FALSE)
str(df)
summary(df)
# add a new variable name
# without any package
df$LogMass <- log(df$Mass)
head(df)
df <- mutate(df, LogMass1 = log(Mass))
head(df)
head(df)
source("~/.active-rstudio-document", echo=TRUE)
rowSums(df$Ampithoe_caddi)
rowSums(df$Ampithoe_caddi, df$Ampithoe_caddi)
rowSums(df[,6:8])
df <- rename(df, Biomass = Mass)
df
head(df)
# with dplyr
df %>% mutate(LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8]), # sum of ampithoe
),
# with dplyr
df %>% mutate(LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8])), # sum of ampithoe),
# with dplyr
df %>% mutate(LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8])) # sum of ampithoe),
rename(df, Biomass = Mass)
source("~/.active-rstudio-document", echo=TRUE)
rename(df, Biomass = Mass)
head(df)
# with dplyr
df <- mutate(df, LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8]), # sum of ampithoe
)
df <- rename(df, Biomass = Mass)
head(df)
df <-unite(df, "Habitat_DayNight", c(Habitat, DayNight), sep = "_", remove = FALSE)
head(df)
# unite two character variables
df <-unite(df, Habitat_DayNight, c(Habitat, DayNight), sep = "_", remove = FALSE)
head(df)
source("~/.active-rstudio-document", echo=TRUE)
# separating columns
df <-separate(df, Habitat, c('Genus', 'Species'), sep = "_", remove = FALSE)
head(df)
# try with the pipe
df %>% mutate(df, LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8]), # sum of ampithoe
)
# try with the pipe
df %>% mutate(LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8]), # sum of ampithoe
)
# try with the pipe
df %>% mutate(LogMass = log(Mass)) # log of the mass
df %>%  mutate(Clean = Biomass)
head(df,2)
df %>%  mutate(Clean = Biomass)
head(df,2)
df %>% mutate(Clean = Biomass *2)
head(df,2)
# Subsetting
df[1:10,]
df[,1:5]
head(df[,1:5])
# Subsetting when it does not forms a sequence
df[c(6, 10:20),]
# Subsetting when it does not forms a sequence
df[c(10:20), c(1,3:5)]
# Subsetting when it does not forms a sequence
df[c(1, 10:20), c(1,3:5)]
df.Genus
unique(df$Genus)
df&Genus
df$Genus
filter(df$Genus == 'Sargassum')
unique(df$Biomass)
filter(df$Biomass > 5)
df$Biomass <- filter(df$Biomass > 5)
df <- filter(df, Biomass > 5)
df
unique(df$Biomass)
df$Biomass < 5
library(tidyverse)
snail_feed <- filter(snail_feed, is.na(snail_feed) )
snail_feed <- filter(snail_feed, snail_feed != is.na(snail_feed) )
snail_feed <- drop_na(snail_feed)
# random sampling from the dataset
sampled = sample_frac(df, size = 0.5, replace = FALSE)
# top highest rows
top_n(df, 10, Biomass)
ggplot(ex)+
geom_point(x=LogMass, y=Biomass)
ggplot(ex)+
geom_point(aes(x=LogMass, y=Biomass))
# top highest rows
ex <- top_n(df, 10, Biomass)
ggplot(ex)+
geom_point(aes(x=LogMass, y=Biomass))
ggplot(ex)+
geom_point(aes(x=Ampithoe, y=Biomass))
ggplot(ex)+
geom_bar(aes(x=DayNight, y=Biomass))
ggplot(ex)+
geom_bar(aes(y=Biomass))
ggplot(ex)+
geom_bar(aes(x=Biomass))
ggplot(ex)+
geom_bar(aes(x=DayNight))
source("~/R_STUDIES/data_manipulation.R", echo=TRUE)
df
df[, 'Habitat']
df[, 'Habitat':'Species']
grep('Habitat', colnames(df))
grep('Genus', colnames(df))
grep('^Habitat$', colnames(df))
df[, grep('^Habitat$', colnames(df)): 10] # find col index
head(df[, grep('^Habitat$', colnames(df)): 10]) # find col index
which(is.na(df))
which(is.character(df))
which(df$LogMass > 5)
which(names(df)=='Habitat' )
names(df)
class(names(df))
str(names(df))
f <- str(names(df))
df[, which(names(df)=='Habitat')] # using which
df <- distinct(df)
df_subset <- select(df, Genus)
df_subset <- select(df, Biomass: Ampithoe)
df_subset2 <- select(df, Genus, LogMass) # one col
df_subset2 <- select(df, Genus, LogMass, Ampithoe) # specific cols
# Subseting colums that starts or ends with a determined value
df_subset4 <- select(df, starts_with('G'))
# Subseting colums that starts or ends with a determined value
df_subset4 <- select(df, starts_with('Gen'))
# Subseting colums that starts or ends with a determined value
df_subset4 <- select(df, starts_with('Am'))
df_subset5 <- select(df, starts_with('ass'))
df_subset5 <- select(df, end_with('ass'))
df_subset5 <- select(df, ends_with('ass'))
df_subset6 <- select(df, match('^Am')) # with regular expression
df_subset6 <- select(df, match('^Am')) # with regular expression
df_subset6 <- select(df, match('^Ampithoe')) # with regular expression
df_subset6 <- select(df, matches('^Ampithoe')) # with regular expression
df_subset6 <- select(df, matches('^Amp')) # with regular expression
df_subset7 <- select(df, matches('ass$')) # with regular expression
df_subset8 <- select(df, contains('Night'))
# exclude a colums
df_subset9 <- select(df, -Mass)
# exclude a colums
df_subset9 <- select(df, -LogMass)
# exclude a colums
df_subset9 <- select(df, -LogMass, -Ampithoe)
?dplyr
# Summarising Data
summarise(df)
# Summarising Data
summary(df)
# Summarising Data
summarise(df, Biomass_test = mean(Biomass))
mean(df$Biomass)
# Summary group of rows -> group_by
group_by(df, Day_Night)
# Summary group of rows -> group_by
group_by(df, Biomass)
# Summary group of rows -> group_by
group_by(df, DayNight)
# Summary group of rows -> group_by
x <- group_by(df, DayNight)
# Summary group of rows -> group_by
group_by(df, DayNight)
# Summary group of rows -> group_by
df %>% group_by(DayNight)
# Summary group of rows -> group_by
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by
df %>%
group_by(Genus) %>%
summarise(
mean.Biomass = mean(Biomass), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by
df %>%
group_by(DayNight) %>%
summarise(
mean.Biomass = mean(Biomass), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(DayNight) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=True), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(DayNight) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass), # minimum
max.Biomass = max(Biomass), # maximum
med.Biomass = median(Biomass), # median
sd.Biomass = sd(Biomass)) # standard deviation
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) # standard deviation
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(Species, desc(Species))
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(Species, desc(mean.Biomass))
# Summary group of rows -> group_by # careful with NA
df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(desc(mean.Biomass))
# Summary group of rows -> group_by # careful with NA
df_summarised <- df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(desc(mean.Biomass)) # rearrange the order of the rows
ggplot(df, aes(Species, Biomass)) +
geom_boxplot()
ggplot(df, aes(Biomass, Species)) +
geom_boxplot()
ggplot(df, aes(Biomass, Species)) +
geom_boxplot(notch = True)
ggplot(df, aes(Biomass, Species)) +
geom_boxplot(notch = T)
ggplot(df, aes(Biomass, Species, color = Biomass)) +
geom_boxplot(notch = T)
ggplot(df, aes(Biomass, Species, color = Biomass)) +
geom_boxplot(notch = F)
ggplot(df, aes(Biomass, Species, color = Species)) +
geom_boxplot(notch = F)
ggplot(df, aes(Biomass, Species, fill = Species)) +
geom_boxplot(notch = F)
ggplot(df, aes(Biomass, Species, fill = Biomass)) +
geom_boxplot(notch = F)
ggplot(df, aes(Biomass, Species, fill = DayNight)) +
geom_boxplot(notch = F)
R.version.string
#> [1] "R version 4.2.1 (2022-06-23)"
R.version.string
install.packages("usethis")
usethis::create_github_token()
> gitcreds::gitcreds_set()
install.packages("gitcreds")
gitcreds::gitcreds_set()
gitcreds_get()
gitcreds_get()
credentials::set_github_pat()
gh::gh_whoami()
source("~/GitHub/RStudies/intro.R", echo=TRUE)
source("~/GitHub/RStudies/getting_started.R", echo=TRUE)
source("~/GitHub/RStudies/data_manipulation.R", echo=TRUE)
ggplot(df, aes(Biomass, Species, fill = DayNight)) +
geom_boxplot(notch = F) +
geom_tile('Boxplot Biomass per Species x DayNight')
# Summary group of rows -> group_by # careful with NA
df_summarised <- df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(desc(mean.Biomass)) # rearrange the order of the rows
ggplot(df, aes(Biomass, Species, fill = DayNight)) +
geom_boxplot(notch = F) +
geom_tile('Boxplot Biomass per Species x DayNight')
# combining datasets
df
ggplot(df, aes(Biomass, Species, fill = DayNight)) +
geom_boxplot(notch = F) +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot(df, aes(Biomass, Species, fill = DayNight)) +
geom_boxplot() +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot(df, MAPPING=aes(Biomass, Species, fill = DayNight)) +
geom_boxplot() +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot(df, mapping = =aes(Biomass, Species, fill = DayNight)) +
ggplot(df, mapping = aes(Biomass, Species, fill = DayNight)) +
geom_boxplot() +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight)) +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot
ggplot(df)
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species))
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight))
source("~/GitHub/RStudies/data_manipulation.R", echo=TRUE)
source("~/GitHub/RStudies/data_manipulation.R", echo=TRUE)
source("~/GitHub/RStudies/data_manipulation.R", echo=TRUE)
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight)) +
geom_tile('Boxplot Biomass per Species x DayNight')
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight))
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight)) +
geom_tile('oh')
df_weather <- read.csv('data/Weather_vars.csv')
summary(df_geo)
df_bats <- read.csv('data/Bats_data.csv')
df_geo <- read.csv('data/Geo_data.csv')
df_weather <- read.csv('data/Weather_vars.csv')
summary(df_geo)
summary(df_weather)
source("~/GitHub/RStudies/combining_datasets.R", echo=TRUE)
left_join(df_bats, df_geo, by=Site)
left_join(df_bats, df_geo, by='Site')
bats_withgeo <- left_join(df_bats, df_geo, by='Site')
bats_withgeo_weather <- left_join(bats_withgeo, df_weather, by='Date')
dim(bats_withgeo_weather)
dim(bats_withge)
dim(bats_withgeo)
dim(df_bats)
colnames(bats_withgeo_weather)
df_completed <- left_join(bats_withgeo, df_weather, by='Date')
colnames(df_completed )
colnames(df_completed)
bats<- right_join(df_bats, df_geo, by='Site')
head(bats)
head(bats_withgeo)
Bat_sim <- as.data.frame(cbind(
Site = c("A", "B", "C", "D", "E"),
Activity = c(62, 29, 30, 23, 24)
))
Tree_sim <- as.data.frame(cbind(
Site = c("D", "E", "F", "G", "H"),
Tree_density = c(525, 390, 477, 778, 817)
))
inner_join(Bat_sim, Tree_sim, by='Site')
# # returns all rows, but places NA in the left NA that does have obs
left_join(Bat_sim, Tree_sim)
# # returns all rows, but places NA in the left NA that does have obs
left_join(Bat_sim, Tree_sim, by='Site')
left_join(Tree_sim, Bat_sim, by='Site')
full_join(Bat_sim, Tree_sim, by='Site')
# IMPORTANT
# find out the obs that are measured in both datasets
Bat_inTree <- semi_join(Bat_sim, Tree_sim, by = "Site")
# find out the obs that ARE NOT measured in both datasets
Bat_notinTree <- anti_join(Bat_sim, Tree_sim, by = "Site")
library(dplyr)
df_bats <- read.csv('data/Bats_data.csv')
df_bats <- read.csv('data/Bats_data.csv')
df_geo <- read.csv('data/Geo_data.csv')
df_weather <- read.csv('data/Weather_vars.csv')
summary(df_geo)
source("~/GitHub/RStudies/R/data_manipulation.R", echo=TRUE)
library(tidyverse)
# read data
df <- read.csv('data/Herbivore_specialisation.csv',
strip.white = T,
na.strings = "",
stringsAsFactors=FALSE)
str(df)
summary(df)
# with dplyr
df <- mutate(df, LogMass = log(Mass), # log of the mass
Ampithoe = rowSums(df[,6:8]), # sum of ampithoe
)
df <- rename(df, Biomass = Mass)
# unite two character variables
df <-unite(df, Habitat_DayNight, c(Habitat, DayNight), sep = "_", remove = FALSE)
head(df)
# separating columns
df <-separate(df, Habitat, c('Genus', 'Species'), sep = "_", remove = FALSE)
head(df)
# Sub-setting
df[1:10,] # lines 1 to 10
head(df[,1:5]) # cols 1 to 5
# Subsetting when it does not forms a sequence
df[c(1, 10:20), c(1,3:5)]
# subseting based on a filter
df <- filter(df, Biomass > 5)
# random sampling from the dataset
sampled = sample_frac(df, size = 0.5, replace = FALSE)
# top highest rows
ex <- top_n(df, 10, Biomass)
# find col index
df[, grep('^Habitat$', colnames(df)): 10] # using grep and regular expressions
df[, which(names(df)=='Habitat')] # using which
df <- distinct(df)
# Subset using the col names
df_subset1 <- select(df, Genus) # one col
df_subset2 <- select(df, Genus, LogMass, Ampithoe) # specific cols
df_subset3 <- select(df, Biomass: Ampithoe) # sequence of cols
# Subseting colums that starts or ends with a determined value
df_subset4 <- select(df, starts_with('Am'))
df_subset5 <- select(df, ends_with('ass'))
df_subset6 <- select(df, matches('^Amp')) # with regular expression
df_subset7 <- select(df, matches('ass$')) # with regular expression
df_subset8 <- select(df, contains('Night')) # contain a sequence of characters
# exclude colums
df_subset9 <- select(df, -LogMass, -Ampithoe)
# Summarising Data
summarise(df, Biomass_test = mean(Biomass))
mean(df$Biomass)
# Summary group of rows -> group_by # careful with NA
df_summarised <- df %>%
group_by(Species) %>%
summarise(
mean.Biomass = mean(Biomass, na.rm=TRUE), # mean
min.Biomass = min(Biomass, na.rm=TRUE), # minimum
max.Biomass = max(Biomass, na.rm=TRUE), # maximum
med.Biomass = median(Biomass, na.rm=TRUE), # median
sd.Biomass = sd(Biomass, na.rm=TRUE)) %>% # standard deviation
arrange(desc(mean.Biomass)) # rearrange the order of the rows
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight)) +
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight)) +
ggplot
ggplot
source("~/GitHub/RStudies/R/data_manipulation.R", echo=TRUE)
ggplot(df) +
geom_boxplot(mapping = aes(Biomass, Species, fill = DayNight))
source("~/GitHub/RStudies/data_manipulation.R", echo=TRUE)
source("~/GitHub/RStudies/environmental_computing/intro.R", echo=TRUE)
